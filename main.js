'use strict'

// –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç—É —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É –≥—Ä—É: "–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ"

let secret = Math.floor(Math.random() * 100) + 1;
let attempts = 0;

const translations = {
  ua: {
    title: '–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 100!',
    check: '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏',
    retry: '–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑',
    win: (secret, attempts) => `üéâ –í—ñ—Ç–∞—é, —Ç–∞–≤–æ—Ä–æ—Ç! –í–∏ –≤–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${secret} –∑–∞ ${attempts} —Å–ø—Ä–æ–±.`,
    more: '–°–ø—Ä–æ–±—É–π—Ç–µ –±—ñ–ª—å—à–µ —á–∏—Å–ª–æ!',
    less: '–°–ø—Ä–æ–±—É–π—Ç–µ –º–µ–Ω—à–µ —á–∏—Å–ª–æ!',
    wrong: '–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ!'
  },
  pl: {
    title: 'Zgadnij liczbƒô od 1 do 100!',
    check: 'Sprawd≈∫',
    retry: 'Spr√≥buj ponownie',
    win: (secret, attempts) => `üéâ Brawo! Zgad≈Çe≈õ liczbƒô ${secret} w ${attempts} pr√≥bach.`,
    more: 'Spr√≥buj wiƒôkszƒÖ liczbƒô!',
    less: 'Spr√≥buj mniejszƒÖ liczbƒô!',
    wrong: 'Wpisz poprawnƒÖ liczbƒô!'
  }
};

let currentLang = 'ua';

function setLang(lang) {
  currentLang = lang;
  document.getElementById('game-title').textContent = translations[lang].title;
  document.getElementById('check').textContent = translations[lang].check;
  document.getElementById('pl-btn').classList.toggle('active', lang === 'pl');
  document.getElementById('ua-btn').classList.toggle('active', lang === 'ua');
  const retryBtn = document.getElementById('retry');
  if (retryBtn) retryBtn.textContent = translations[lang].retry;
  document.getElementById('result').textContent = '';
}

document.getElementById('pl-btn').onclick = () => setLang('pl');
document.getElementById('ua-btn').onclick = () => setLang('ua');

// –î–æ–¥–∞—î–º–æ –∑–º—ñ–Ω—É —Ç–µ–∫—Å—Ç—ñ–≤ —É –æ—Å–Ω–æ–≤–Ω—ñ–π –ª–æ–≥—ñ—Ü—ñ –≥—Ä–∏:
document.getElementById('check').onclick = function() {
  const guess = Number(document.getElementById('guess').value);
  attempts++;
  let message = '';
  if (guess === secret) {
    message = translations[currentLang].win(secret, attempts);
    document.getElementById('check').disabled = true;

    // –í—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –∞–ø–ª–æ–¥–∏—Å–º–µ–Ω—Ç–∏
    const audio = new Audio('applause.mp3');
    audio.play();

    // –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É-–ø—Ä–∏–∑ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é —á–æ—Ä–Ω–æ—ó –¥—ñ—Ä–∏
    const prizeContainer = document.getElementById('prize-container');
    prizeContainer.innerHTML = '';

    const img = document.createElement('img');
    img.src = 'prize.png';
    img.alt = '–ü—Ä–∏–∑';
    img.className = 'prize-img';

    prizeContainer.appendChild(img);

    setTimeout(() => {
      img.classList.add('show');
    }, 10);

    setTimeout(() => {
      prizeContainer.innerHTML = '';
    }, 4000);

    // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑"
    if (!document.getElementById('retry')) {
      const retryBtn = document.createElement('button');
      retryBtn.id = 'retry';
      retryBtn.textContent = translations[currentLang].retry;
      retryBtn.onclick = function() {
        secret = Math.floor(Math.random() * 100) + 1;
        attempts = 0;
        document.getElementById('check').disabled = false;
        document.getElementById('result').textContent = '';
        document.getElementById('guess').value = '';
        retryBtn.remove();
      };
      document.getElementById('result').after(retryBtn);
    }
  } else if (guess < secret) {
    message = translations[currentLang].more;
  } else if (guess > secret) {
    message = translations[currentLang].less;
  } else {
    message = translations[currentLang].wrong;
  }
  document.getElementById('result').textContent = message;
};

// –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ + —ñ - —Ç—ñ–ª—å–∫–∏ –Ω–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—è—Ö
function isMobile() {
  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
}

const guessInput = document.getElementById('guess');
const guessRange = document.getElementById('guess-range');

if (isMobile()) {
  guessRange.style.display = '';
  guessInput.style.width = '60px';
  guessInput.value = guessRange.value = 1;

  // –°–ª–∞–π–¥–µ—Ä ‚Üí input
  guessRange.oninput = function() {
    guessInput.value = this.value;
  };
  // input ‚Üí —Å–ª–∞–π–¥–µ—Ä
  guessInput.oninput = function() {
    let val = parseInt(this.value, 10);
    if (isNaN(val) || val < 1) val = 1;
    if (val > 100) val = 100;
    this.value = val;
    guessRange.value = val;
  };
} else {
  guessRange.style.display = 'none';
}